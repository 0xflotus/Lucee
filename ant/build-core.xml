<?xml version="1.0" encoding="UTF-8"?>
<project default="susi" basedir="${rootDir}" name="LuceeCore" ><!-- TODO maybe there is a better way for this -->
  <description>
        Build Lucee Core
  </description>
  

  <property name="build.compiler" value="extJavac"/>
  <property name="agent" value="lucee.runtime.instrumentation.ExternalAgent"/>
  <property name="bundleName" value="Lucee Core"/>
  <property name="bundleSymbolicName" value="lucee.core"/>
  
  <property name="testboxVersion" value="2.2.0"/>
  <property name="testboxURL" 
    value="http://downloads.ortussolutions.com/ortussolutions/testbox/${testboxVersion}/testbox-${testboxVersion}.zip"/>
  <property name="extURL" value="http://extension.lucee.org/rest/extension/provider/full/"/>
  
  <property name="extLucene" value="EFDEB172-F52E-4D84-9CD1A1F561B3DFC8"/>
  <property name="extHibernate" value="FAD1E8CB-4F45-4184-86359145767C29DE"/>

  <property name="extMySQL" value="7E673D15-D87C-41A6-8B5F1956528C605F"/>
  <property name="extMSSQL" value="99A4EF8D-F2FD-40C8-8FB8C2E67A4EEEB6"/>
  <property name="extPostgreSQL" value="671B01B8-B3B3-42B9-AC055A356BED5281"/>
  <property name="extJDTsSQL" value="2BCD080F-4E1E-48F5-BEFE794232A21AF6"/>

  <property name="extH2" value="465E1E35-2425-4F4E-8B3FAB638BD7280A"/>
  
  <!-- http://www.coldbox.org/download/testbox -->
  <tstamp>
      <format property="NOW" pattern="yyyy/MM/dd HH:mm:ss z" locale="en,GB"/>
  </tstamp>

  <scriptdef name="unwrap" language="javascript">
     <attribute name="text" />
     <attribute name="property" />
     <![CDATA[
      var text = attributes.get("text");
      text=text.trim();
      if(text.startsWith('"') && text.endsWith('"')) {
        text=text.substring(1,text.length()-1);
      }
      project.setProperty(attributes.get("property"), text);
     ]]>
  </scriptdef>

  <scriptdef name="updatedate" language="javascript">
     <attribute name="text" />
     <attribute name="date" />
     <attribute name="property" />
     <![CDATA[
      var text = attributes.get("text");
      var date = attributes.get("date");
      
      var index=text.indexOf("lucee.core.release.date");
      if(index!=-1) {
        var start=text.indexOf('"',index);
        var end=text.indexOf('"',start+1);
        if(start!=-1 && end!=-1) {
          text=text.substring(0,start+1)+date+text.substring(end);
        }
      }

      project.setProperty(attributes.get("property"), text);
     ]]>
  </scriptdef>
  <scriptdef name="currentTime" language="javascript">
     <attribute name="property" />
     <![CDATA[
      project.setProperty(attributes.get("property"), new Date().getTime());
     ]]>
  </scriptdef>

  <scriptdef name="toFileName" language="javascript">
     <attribute name="name" />
     <attribute name="version" />
     <attribute name="property" />
     <![CDATA[
      var name = attributes.get("name").trim();
      var version = attributes.get("version").trim();
      
      var needle = ' ';
      //var regex = new RegExp(needle,'g');
      var repl = '-';
      
      // removes quotes
      if(name.startsWith('"') && name.endsWith('"')) {
        name=name.substring(1,name.length()-1).trim();
      }

      // remove brackets
      var start,end;
      while((start=name.indexOf('('))!=-1) {
        end=name.indexOf(')',start+1);
        if(end==-1) break;
        name=(name.substring(0,start) + name.substring(end+1)).trim();
      }

      // version
      if(version.startsWith('"') && version.endsWith('"')) {
        version=version.substring(1,version.length()-1).trim();
      }

      name=name.trim();
      name=name.replace(" ","-").toLowerCase();
      name=name.replace(" ","-"); // TODO make better but not with regex some ant version will fail
      name=name.replace(" ","-");
      name=name.replace(" ","-");
      name=name.replace(" ","-");
      name=name.replace(" ","-");

      project.setProperty(attributes.get("property"), name+"-"+version+".lex");
     ]]>
  </scriptdef>


  <target name="init">

    <property name="srcLoader" location="${rootDir}/loader/src/main/java"/>
    <property name="srcCore" location="${rootDir}/core/src/main/java"/>
    <property name="cache" location="${rootDir}/cache"/>
    <property name="trgLoader" location="${rootDir}/loader/target"/>
    <property name="trgCore" location="${rootDir}/core/target"/>
    <property name="srcCFML" location="${rootDir}/core/src/main/cfml"/>
    <property name="srcInst" location="${rootDir}/instrumentation/src/main/java"/> 
    <property name="ant" location="${rootDir}/ant"/>
    <property name="test" location="${rootDir}/test"/>
    <property name="temp" location="${rootDir}/temp"/>
    <property name="loader" location="${temp}/loader"/>
    <property name="core" location="${temp}/core"/>
    <property file="${rootDir}/build.properties"/>

<echo>

   __                     
  / / _   _  ___ ___  ___ 
 / / | | | |/ __/ _ \/ _ \
/ /__| |_| | (_|  __/  __/
\____/\__,_|\___\___|\___|

==========================
LUCEE BUILD PROCESS
==========================                   
    </echo>

    <echo message="${version}"/>
    <echo message="${name}"/>
    <echo message="${name.explanation}"/>
    <echo message="${rootDir}"/>
                    
    
    <!-- Create the time stamp -->
    <tstamp/>
    
    <delete dir="${temp}"/>
    
    <!-- Create the  directory structure needed -->
    <mkdir dir="${core}"/>
    <mkdir dir="${loader}"/>
    <mkdir dir="${temp}/agent"/>
    <mkdir dir="${cache}"/>

  </target>



    <macrodef name="loadmf">
        <attribute name="jar"/>
        <attribute name="prefix" default=""/>
        <sequential>
            <loadproperties>
                <!-- Load the manifest entries -->
                <zipentry zipfile="@{jar}" name="META-INF/MANIFEST.MF"/>
                <!-- Add the prefix -->
                <filterchain>
                    <prefixlines prefix="@{prefix}"/>
                </filterchain>
            </loadproperties>
        </sequential>
    </macrodef>

  <target name="check-cache">
      <!-- download file necessary -->

    <available file="${cache}/testbox-${testboxVersion}.zip" property="testbox.present"/>

    <available file="${cache}/${extMySQL}.lex" property="mysql.present"/>
    <available file="${cache}/${extMSSQL}.lex" property="mssql.present"/>
    <available file="${cache}/${extPostgreSQL}.lex" property="postgre.present"/>
    <available file="${cache}/${extJDTsSQL}.lex" property="jdts.present"/>
  </target>


  <target name="check-mysql" depends="check-cache" unless="mysql.present">
      <get src="${extURL}${extMySQL}" dest="${cache}/${extMySQL}.lex"/>
  </target> 
  <target name="check-mssql" depends="check-cache" unless="mssql.present">
      <get src="${extURL}${extMSSQL}" dest="${cache}/${extMSSQL}.lex"/>
  </target> 
  <target name="check-postgre" depends="check-cache" unless="postgre.present">
      <get src="${extURL}${extPostgreSQL}" dest="${cache}/${extPostgreSQL}.lex"/>
  </target> 
  <target name="check-jdts" depends="check-cache" unless="jdts.present">
      <get src="${extURL}${extJDTsSQL}" dest="${cache}/${extJDTsSQL}.lex"/>
  </target>
  <target name="check-testbox" depends="check-cache" unless="testbox.present">
      <get src="${testboxURL}" dest="${cache}/testbox-${testboxVersion}.zip"/>
  </target> 

  <target name="check" depends="check-mysql,check-mssql,check-postgre,check-jdts,check-testbox">
    
    <mkdir dir="${temp}/loader/extensions/"/>

    <!-- add extension MySQL
    <loadmf jar="${cache}/${extMySQL}.lex" prefix="ext_mysql."/>
    <toFileName name="${ext_mysql.name}" version="${ext_mysql.version}" property="ext_mysql.filename"/>
    <copy 
      file="${cache}/${extMySQL}.lex" 
      todir="${temp}/loader/extensions/"/>
    <move 
      file="${temp}/loader/extensions/${extMySQL}.lex" 
      tofile="${temp}/loader/extensions/${ext_mysql.filename}"/>
    <echo>add:${temp}/loader/extensions/${ext_mysql.filename}</echo>
 -->

    <!-- testbox -->
    <copy 
      file="${cache}/testbox-${testboxVersion}.zip" 
      todir="${temp}"/>

  </target> 

  
  <target name="copyDeployFiles" depends="init,check" description="copy files from source/cfml to source/java/core/src/resource">
    <copy todir="${srcCore}/resource/context/">
      <fileset dir="${srcCFML}/context/">
        <include name="*.cfm"/>
        <include name="*.cfc"/>
        <include name="*.lucee"/>
        <include name="*.xml"/>
      </fileset>
    </copy>

    <copy todir="${srcCore}/resource/context/admin/resources/language/">
      <fileset dir="${srcCFML}/context/admin/resources/language/">
        <include name="*.cfm"/>
        <include name="*.cfc"/>
        <include name="*.lucee"/>
        <include name="*.xml"/>
      </fileset>
    </copy>

    <copy todir="${srcCore}/resource/context/gateway">
      <fileset dir="${srcCFML}/context/gateway">
        <include name="*.cfm"/>
        <include name="*.cfc"/>
        <include name="*.lucee"/>
        <include name="*.xml"/>
      </fileset>
    </copy>

    <copy todir="${srcCore}/resource/context/templates/error">
      <fileset dir="${srcCFML}/context/templates/error">
        <include name="*.cfm"/>
        <include name="*.cfc"/>
        <include name="*.lucee"/>
        <include name="*.xml"/>
      </fileset>
    </copy>

    <copy todir="${srcCore}/resource/context/admin/plugin">
      <fileset dir="${srcCFML}/context/admin/plugin">
        <include name="**/*.cfm"/>
        <include name="**/*.cfc"/>
        <include name="**/*.lucee"/>
        <include name="**/*.xml"/>
      </fileset>
    </copy>
  </target>

  <target name="agent" depends="copyDeployFiles" description="create external-agent  jar used as backup when dynamic agent fails" >

    <!-- compie the source -->
    <javac 
      srcdir="${srcInst}" 
      target="1.7" 
      destdir="${temp}/agent"
      debug="true" debuglevel="lines,vars,source" classpath="${dependencies}">
    </javac>

    <!-- create the manifest file -->
    <jar 
        basedir="${temp}/agent" 
        jarfile="${core}/resource/lib/lucee-external-agent.jar" 
        manifest="${srcInst}/META-INF/MANIFEST.MF"/> 
    

  </target>

  <target name="_loader" depends="agent" description="compile the source" >
    <!-- compie the source -->
    <javac 
      srcdir="${srcLoader}" 
      target="1.7" 
      destdir="${temp}/loader"
      debug="true" debuglevel="lines,vars,source" classpath="${dependencies}">
    </javac>
    
    <!-- copy all non java files -->
    <copy todir="${temp}/loader">
      <fileset dir="${srcLoader}">
        <exclude name="**/*.java"/>
        <exclude name=".*"/>
      </fileset>
    </copy>

    <!-- set lucee/version file -->
    <currentTime property="ct" />
    <echo file="${temp}/loader/lucee/version" message="${version}:${ct}" encoding="UTF-8"/>


  </target>


  <target name="_core" depends="_loader" description="compile the source" >
    
    <!-- set the loader as classpath -->
    <path id="classpath">
      <pathelement location="${temp}/loader" />
      <pathelement path="${dependencies}"/>
    </path>

    <!-- <pathconvert property="classpathProp" refid="classpath"/> -->
   
    <!-- compile the core -->
    <javac 
      srcdir="${srcCore}" 
      target="1.7" 
      destdir="${core}"
      debug="true" debuglevel="lines,vars,source">
       <classpath refid="classpath" />
    </javac>

    <!-- copy all non java files -->
    <copy todir="${core}">
      <fileset dir="${srcCore}">
        <exclude name="**/*.java"/>
        <exclude name=".*"/>
      </fileset>
    </copy>

    <!-- set date in default properties -->
    <loadfile property="defprop"
      srcFile="${core}/default.properties"/>
    <updatedate text="${defprop}" date="${NOW}" property="moddefprop" />
    <echo file="${core}/default.properties" message="${moddefprop}"/>

    <!-- create the manifest file -->
    <manifest file="${core}/META-INF/MANIFEST.MF" mode="update">
      <attribute name="Bundle-Version" value="${version}"/>
      <attribute name="Bundle-Name" value="${bundleName}"/>
      <attribute name="Bundle-SymbolicName" value="${bundleSymbolicName}"/>
      <attribute name="Bundle-ManifestVersion" value="2"/>
      <attribute name="Built-Date" value="${NOW}"/>
      <attribute name="State" value="${state}"/>
      <attribute name="Minor-Name" value="${name}"/>
      <attribute name="Minor-Name-Explanation" value="${name.explanation}"/>
    </manifest>
  </target>


  <target name="buildJars" depends="_core" description="generate temporary jars used to generate the archive" >
    
    <!-- generates a jar from the core 
          this jars are only 
    -->
    <jar 
        basedir="${core}" 
        jarfile="${temp}/loader/core/core.lco" 
        manifest="${core}/META-INF/MANIFEST.MF"/> 


    <!-- genrates the jar from the loader -->
    <jar 
      basedir="${temp}/loader" 
      jarfile="${temp}/lucee.jar" 
      manifest="${srcLoader}/META-INF/MANIFEST.MF"/>

  </target>



  <target name="__build" depends="buildJars">

    <!-- first we copy the jars in place otherwise, Lucee downloads them  -->
    <copy todir="${temp}/archive/base/lucee-server/bundles" flatten="true">
      <path>
        <pathelement path="${dependencies}"/>
      </path>
    </copy>

    <!-- now we need to get the testbox source -->
    <unzip src="${temp}/testbox-${testboxVersion}.zip" dest="${temp}/testbox"/>
    <delete dir="${temp}/testbox-${testboxVersion}.zip"/>


    <!-- build the lucee-context.lar -->
    <java classname="org.apache.tools.ant.launch.Launcher" dir="${ant}" fork="true" failonerror="false" errorproperty="exc">
      <classpath path="${java.class.path}">
          <pathelement location="${temp}/lucee.jar"/>
          <pathelement path="${runtime_classpath}"/>
      </classpath>

      <arg value="-f"/>
      <arg value="${ant}/build-create-archive.xml"/>

      <jvmarg value="-Dsrc=${srcCFML}/context"/>
      <jvmarg value="-Dtemp=${temp}/archive"/>
      <jvmarg value="-Dtestbox=${temp}/testbox/testbox"/>
      <jvmarg value="-Dlucee.base.dir=${temp}/archive/base"/>
      <jvmarg value="-Dlucee.web.dir=${temp}/archive/webroot"/>
      <jvmarg value="-Dlucee.enable.dialect=true"/>
    </java>
    <echo>${exc}</echo>



    <!-- execute CFML testcases -->
    <java classname="org.apache.tools.ant.launch.Launcher" dir="${ant}" fork="true" failonerror="true" errorproperty="exc2">
      <classpath path="${java.class.path}">
          <pathelement location="${temp}/lucee.jar"/>
          <pathelement path="${runtime_classpath}"/>
      </classpath>

      <arg value="-f"/>
      <arg value="${ant}/run-testcases.xml"/>

      <jvmarg value="-Dtest=${test}"/>
      <jvmarg value="-Dtemp=${temp}"/>
      <jvmarg value="-DtestboxArchive=${temp}/archive/testbox.lar"/>
      <jvmarg value="-Dexecute=${testcases}"/>

      <jvmarg value="-Dlucee.base.dir=${temp}/archive/base"/>
      <jvmarg value="-Dlucee.web.dir=${temp}/archive/webroot"/>
      <jvmarg value="-Dlucee-extensions=${extH2};"/>
      <jvmarg value="-Dlucee.enable.dialect=true"/>
    </java>
    <echo>${exc2}</echo>



<!-- now we have to build the lucee.jar again, this time with the lar files -->
    <!-- copy the lucee lar -->
    <copy file="${temp}/archive/lucee-context.lar" tofile="${core}/resource/context/lucee-context.lar"/>
    <copy file="${temp}/archive/lucee-admin.lar" tofile="${core}/resource/context/lucee-admin.lar"/> 
    <copy file="${temp}/archive/lucee-doc.lar" tofile="${core}/resource/context/lucee-doc.lar"/> 
    


  </target>


  <target name="buildCore" depends="__build">

    <!-- copy all the source to the classes folder -->
    <copy todir="${outputDir}">
      <fileset dir="${core}">
        <exclude name=".*"/>
      </fileset>
    </copy>
  </target>

  <target name="addExtensions">
    <mkdir dir="${outputDir}/extensions/"/>

    <!-- add extension MySQL -->
    <loadmf jar="${cache}/${extMySQL}.lex" prefix="ext_mysql."/>
    <toFileName name="${ext_mysql.name}" version="${ext_mysql.version}" property="ext_mysql.filename"/>
    <copy 
      file="${cache}/${extMySQL}.lex" 
      todir="${outputDir}/extensions/"/>
    <move 
      file="${outputDir}/extensions/${extMySQL}.lex" 
      tofile="${outputDir}/extensions/${ext_mysql.filename}"/>
    <echo>add:${outputDir}/extensions/${ext_mysql.filename}</echo>

    <!-- add extension MSSQL -->
    <loadmf jar="${cache}/${extMSSQL}.lex" prefix="ext_mssql."/>
    <toFileName name="${ext_mssql.name}" version="${ext_mssql.version}" property="ext_mssql.filename"/>
    <copy 
      file="${cache}/${extMSSQL}.lex" 
      todir="${outputDir}/extensions/"/>
    <move 
      file="${outputDir}/extensions/${extMSSQL}.lex" 
      tofile="${outputDir}/extensions/${ext_mssql.filename}"/>
    <echo>add:${outputDir}/extensions/${ext_mssql.filename}</echo>

    <!-- add extension Postgre -->
    <loadmf jar="${cache}/${extPostgreSQL}.lex" prefix="ext_postgre."/>
    <toFileName name="${ext_postgre.name}" version="${ext_postgre.version}" property="ext_postgre.filename"/>
    <copy 
      file="${cache}/${extPostgreSQL}.lex" 
      todir="${outputDir}/extensions/"/>
    <move 
      file="${outputDir}/extensions/${extPostgreSQL}.lex" 
      tofile="${outputDir}/extensions/${ext_postgre.filename}"/>
    <echo>add:${outputDir}/extensions/${ext_postgre.filename}</echo>

    <!-- add extension JDTS -->
    <loadmf jar="${cache}/${extJDTsSQL}.lex" prefix="ext_jdts."/>
    <toFileName name="${ext_jdts.name}" version="${ext_jdts.version}" property="ext_jdts.filename"/>
    <copy 
      file="${cache}/${extJDTsSQL}.lex" 
      todir="${outputDir}/extensions/"/>
    <move 
      file="${outputDir}/extensions/${extJDTsSQL}.lex" 
      tofile="${outputDir}/extensions/${ext_jdts.filename}"/>
    <echo>add:${outputDir}/extensions/${ext_jdts.filename}</echo>



  </target>

  <target name="buildLoader" depends="__build,addExtensions" description="generate the loader jar" >  
    <!-- create the luce core -->
    <jar 
        basedir="${core}" 
        jarfile="${trgLoader}/${version}.lco" 
        manifest="${core}/META-INF/MANIFEST.MF"/>

    <!-- copy to core to the classes folder -->
    <copy 
        file="${trgLoader}/${version}.lco" 
        tofile="${outputDir}/core/core.lco"/>

    <!-- version -->
    <currentTime property="ct" />
    <echo file="${outputDir}/lucee/version" message="${version}:${ct}" encoding="UTF-8"/>

    
    <delete dir="${temp}"/>
  </target>
  <target name="buildLoaderAnt" depends="__build,addExtensions" description="generate the loader jar" >  
    
    <!-- create core -->
    <jar 
        basedir="${core}" 
        jarfile="${temp}/loader/core/core.lco" 
        manifest="${core}/META-INF/MANIFEST.MF"/> 

    <!-- copy to core to the target folder -->
    <copy 
        file="${temp}/loader/core/core.lco" 
        tofile="${trgLoader}/${version}.lco"/>


    
    <!-- version -->
    <currentTime property="ct" />
    <echo file="${temp}/loader/lucee/version" message="${version}:${ct}" encoding="UTF-8"/>


    <!-- genrates the jar from the loader -->
    <jar 
      basedir="${temp}/loader" 
      jarfile="${trgLoader}/lucee-${version}.jar" 
      manifest="${srcLoader}/META-INF/MANIFEST.MF"/>


    <delete dir="${temp}"/>

  </target>

</project>